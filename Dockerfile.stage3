FROM exasol/monitoring:stage2
MAINTAINER Exasol AG
ARG environment=default


# install packages
ADD apt-proxy /etc/apt/apt.conf.d
RUN apt-get -qy update

RUN apt-get install -qy locales python3-pip python3-pyodbc python3-yaml curl git
RUN python3 -m pip install cron_descriptor
RUN python3 -m pip install jinja2
RUN rm -rf /usr/bin/python
RUN ln -s /usr/bin/python3 /usr/bin/python
RUN apt-get -qy install vim

# remove icinga2 defaults
RUN rm -rf /etc/icinga2/conf.d/*.conf

# add yaml2mon
ADD src/yaml2mon /tmp/yaml2mon
RUN mv /tmp/yaml2mon/src/yaml2mon.py /usr/bin
RUN chmod -v 755 /usr/bin/yaml2mon.py
RUN mkdir -p /usr/share/yaml2mon 
RUN mv /tmp/yaml2mon/src/templates /usr/share/yaml2mon/templates
RUN mv /tmp/yaml2mon/etc/yaml2mon /etc/ 

# Add SSL
ADD etc/icinga2/constants.conf /etc/icinga2/constants.conf
# RUN sed -i 's/localhost/'$environment'/g' /etc/icinga2/constants.conf
ADD etc/icinga2/pki /etc/icinga2/pki
RUN cp /etc/icinga2/pki/localhost.crt /etc/icinga2/pki/$environment.crt
RUN cp /etc/icinga2/pki/localhost.csr /etc/icinga2/pki/$environment.csr
RUN cp /etc/icinga2/pki/localhost.key /etc/icinga2/pki/$environment.key
RUN chmod 755 -R /etc/icinga2/pki
ADD var/lib/icinga2/ca /var/lib/icinga2/ca

# Enable API
RUN icinga2 feature enable api
ADD etc/icinga2/conf.d/api-users.conf /etc/icinga2/conf.d/api-users.conf

# Add env converter script (breaks docker build, if non existant environment got supplied)
ADD scripts/conv.sh /tmp
RUN /tmp/conv.sh $environment

# Add local (by default provided) custom check definitions 
ADD usr/share/icinga2/include /usr/share/icinga2/include
# Add custom check plugins
ADD usr/lib/nagios/plugins /usr/lib/nagios/plugins
# Enable new custom checks
RUN echo "include <plugins-custom>" >> /etc/icinga2/icinga2.conf

# Add customer check definitions 
ADD scripts/customer.sh /tmp
RUN /tmp/customer.sh $environment

# clean up and create entrypoint
RUN rm -rf /tmp/yaml2mon
RUN rm -rf /tmp/envs

RUN apt-get -yq clean
ENV TERM=xterm
ENV LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/nagios4/bin:/opt/nagios4/sbin:/opt/pnp4nagios/bin"
RUN localedef -i en_US -f UTF-8 en_US.UTF-8

ADD etc/dockerinit.stage3 /etc/dockerinit

WORKDIR /root
ENTRYPOINT /etc/dockerinit
