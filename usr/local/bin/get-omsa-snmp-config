#!/usr/bin/env python
import xmlrpclib, sys, re, os.path, ssl 
from urllib import quote_plus

if len(sys.argv) != 4:
    print "Usage:\n" + \
          "\tget-omsa-snmp-config [license server] [EXAoperation user] [EXAoperation password]\n"
    sys.exit(1)

def ServerProxy(url):
    if hasattr(ssl, 'SSLContext'):
        sslcontext = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
        sslcontext.verify_mode = ssl.CERT_NONE
        sslcontext.check_hostname = False
        return xmlrpclib.ServerProxy(url, context=sslcontext)
    return xmlrpclib.ServerProxy(url)

licenseServerHostname = sys.argv[1];
userName = sys.argv[2];
password = sys.argv[3];

s = ServerProxy("https://%s:%s@%s/cluster1" % (
    quote_plus(userName),
    quote_plus(password),  
    licenseServerHostname
))

def getMonitoringPlugin(s):
    pluginVersion = ''
    for plugin in s.showPluginList():
        match = re.match(r'Administration\.DELL-OpenManage-(.*)', plugin)
        if match and pluginVersion < match.group(1):
            pluginVersion = match.group(1)
    return 'Administration.DELL-OpenManage-' + pluginVersion

pluginName = getMonitoringPlugin(s)

emptyPattern = re.compile(r'^\s*($|#).*')
for nodeName in s.getNodeList():
    status = s.callPlugin(pluginName, nodeName, 'STATUS')
    if status[0] == 0:
        print "--- Node %s:" % (nodeName)
        status = s.callPlugin(pluginName, nodeName, 'GET_SNMP_CONFIG')
        for line in status[1].split('\n'):
            output = emptyPattern.sub('', line)
            if output:
                print output
        print "---\n\n" 

