#!/usr/bin/env python
import xmlrpclib, sys, re, os.path 
from urllib import quote_plus

if len(sys.argv) != 5:
    print "Usage:\n" + \
          "\tinstall-omsa-snmp-config [license server] [EXAoperation user] [EXAoperation password] [snmp configuration file]\n"
    sys.exit(1)

def ServerProxy(url):
    if hasattr(ssl, 'SSLContext'):
        sslcontext = ssl.SSLContext(ssl.PROTOCOL_TLSv1)
        sslcontext.verify_mode = ssl.CERT_NONE
        sslcontext.check_hostname = False
        return xmlrpclib.ServerProxy(url, context=sslcontext)
    return xmlrpclib.ServerProxy(url)

licenseServerHostname = sys.argv[1];
userName = sys.argv[2];
password = sys.argv[3];
filename = sys.argv[4];

s = ServerProxy("https://%s:%s@%s/cluster1" % (
    quote_plus(userName),
    quote_plus(password),  
    licenseServerHostname
))

def getMonitoringPlugin(s):
    pluginVersion = ''
    for plugin in s.showPluginList():
        match = re.match(r'Administration\.DELL-OpenManage-(.*)', plugin)
        if match and pluginVersion < match.group(1):
            pluginVersion = match.group(1)
    return 'Administration.DELL-OpenManage-' + pluginVersion

pluginName = getMonitoringPlugin(s)
snmpConfigurationString = ''
if (os.path.isfile(filename)):
    fileHandle = open(filename, 'r')
    snmpConfigurationString = fileHandle.read()
    fileHandle.close()
else:
    print "File does not exist!"
    sys.exit(1)

for nodeName in s.getNodeList():
    status = s.callPlugin(pluginName, nodeName, 'STATUS')
    if status[1] in ['started', 'stopped']:
        print "Node %s:" % (nodeName)
        status = s.callPlugin(pluginName, nodeName, 'STOP')
        print "%s\nExit Code:\t%s" % (status[1], status[0])

        status = s.callPlugin(pluginName, nodeName, 'PUT_SNMP_CONFIG', snmpConfigurationString)
        print "%s\nExit Code:\t%s" % (status[1], status[0])

        status = s.callPlugin(pluginName, nodeName, 'START')
        print "%s\nExit Code:\t%s\n----\n\n" % (status[1], status[0])

